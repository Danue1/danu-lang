pub trait Shl<Rhs = Self> {
  type Output;

  fn shl(self, rhs: Rhs) -> Self::Output;
}

impl Shl for Float {
  type Output = Float;

  fn shl(self, rhs: Rhs) -> Self::Output = shl_float_to_float(self, rhs);
}

#[native]
pub fn shl_float_to_float(lhs: Float, rhs: Float) -> Float { }

impl Shl for Int {
  type Output = Int;

  fn shl(self, rhs: Rhs) -> Self::Output = shl_int_to_int(self, rhs);
}

#[native]
pub fn shl_int_to_int(lhs: Int, rhs: Int) -> Int { }

impl Shl for Size {
  type Output = Size;

  fn shl(self, rhs: Rhs) -> Self::Output = shl_size_to_size(self, rhs);
}

#[native]
pub fn shl_size_to_size(lhs: Size, rhs: Size) -> Size { }

impl Shl for Uint {
  type Output = Uint;

  fn shl(self, rhs: Rhs) -> Self::Output = shl_uint_to_uint(self, rhs);
}

#[native]
pub fn shl_uint_to_uint(lhs: Uint, rhs: Uint) -> Uint { }

impl Shl for Usize {
  type Output = Usize;

  fn shl(self, rhs: Rhs) -> Self::Output = shl_usize_to_usize(self, rhs);
}

#[native]
pub fn shl_usize_to_usize(lhs: Usize, rhs: Usize) -> Usize { }
