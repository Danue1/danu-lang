fn foo() {
  match true {
    true => true,
  }
  match true {
    true => true,
    true => true,
  }
  match true {
    Foo => true,
    Foo::Bar => true,
    Foo(foo) => true,
    Foo::Bar(bar) => true,
  }
  match true {
    true => { }
  }
  match true {
    true => { },
  }
  match true {
    true => { },
    true => { }
  }
  match true {
    Foo => { },
    Foo::Bar => { },
    Foo(foo) => { },
    Foo::Bar(bar) => { },
  }

  let foo = match true {
    true => true,
  };
  let foo = match true {
    true => true,
    true => true,
  };
  let foo = match true {
    Foo => true,
    Foo::Bar => true,
    Foo(foo) => true,
    Foo::Bar(bar) => true,
  };
  let foo = match true {
    true => { }
  };
  let foo = match true {
    true => { },
  };
  let foo = match true {
    true => { },
    true => { }
  };
  let foo = match true {
    Foo => { },
    Foo::Bar => { },
    Foo(foo) => { },
    Foo::Bar(bar) => { },
  };
}
